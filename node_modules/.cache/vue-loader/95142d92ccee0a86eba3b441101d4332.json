{"remainingRequest":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\components\\Switch.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\components\\Switch.vue","mtime":1670231463000},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682566248145},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\babel-loader\\lib\\index.js","mtime":1682566249509},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682566248145},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js","mtime":1682566250057}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ2wtc3dpdGNoJywKICAgIHByb3BzOiB7CiAgICAgIHZhbHVlOiBbQXJyYXksIEJvb2xlYW5dLAogICAgICBvblRleHQ6IFN0cmluZywKICAgICAgb2ZmVGV4dDogU3RyaW5nLAogICAgICBjb2xvcjogewogICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICBkZWZhdWx0OiAnJywKICAgICAgICB2YWxpZGF0b3I6ICh2YWx1ZSkgPT4gewogICAgICAgICAgcmV0dXJuIFsnJywgJ2JsdWUnLCAnYXp1cmUnLCAnZ3JlZW4nLCAnb3JhbmdlJywgJ3JlZCcsICdwdXJwbGUnLCAnYmxhY2snXS5pbmNsdWRlcyh2YWx1ZSkKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICBzd2l0Y2hDbGFzcyAoKSB7CiAgICAgICAgbGV0IGJhc2UgPSAnYm9vdHN0cmFwLXN3aXRjaC0nCiAgICAgICAgbGV0IHN0YXRlID0gdGhpcy5tb2RlbCA/ICdvbicgOiAnb2ZmJwogICAgICAgIGxldCBjbGFzc2VzID0gYmFzZSArIHN0YXRlCiAgICAgICAgaWYgKHRoaXMuY29sb3IpIHsKICAgICAgICAgIGNsYXNzZXMgPSBgJHtjbGFzc2VzfSAke2Jhc2V9JHt0aGlzLmNvbG9yfWAKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGNsYXNzZXMKICAgICAgfSwKICAgICAgbW9kZWw6IHsKICAgICAgICBnZXQgKCkgewogICAgICAgICAgcmV0dXJuIHRoaXMudmFsdWUKICAgICAgICB9LAogICAgICAgIHNldCAodmFsdWUpIHsKICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWUpCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICB0cmlnZ2VyVG9nZ2xlICgpIHsKICAgICAgICB0aGlzLm1vZGVsID0gIXRoaXMubW9kZWwKICAgICAgfQogICAgfQogIH0K"},{"version":3,"sources":["Switch.vue"],"names":[],"mappings":";AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Switch.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"bootstrap-switch bootstrap-switch-wrapper bootstrap-switch-animate\" :class=\"switchClass\">\n    <div class=\"bootstrap-switch-container\" @click=\"triggerToggle()\">\n      <span class=\"bootstrap-switch-handle-on \" :class=\"`bootstrap-switch-${color}`\">\n        <slot name=\"on\">\n            {{onText}}\n        </slot>\n      </span>\n      <span class=\"bootstrap-switch-label\"></span>\n      <span class=\"bootstrap-switch-handle-off bootstrap-switch-default\">\n        <slot name=\"off\">\n            {{offText}}\n        </slot>\n      </span>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'l-switch',\n    props: {\n      value: [Array, Boolean],\n      onText: String,\n      offText: String,\n      color: {\n        type: String,\n        default: '',\n        validator: (value) => {\n          return ['', 'blue', 'azure', 'green', 'orange', 'red', 'purple', 'black'].includes(value)\n        }\n      }\n    },\n    computed: {\n      switchClass () {\n        let base = 'bootstrap-switch-'\n        let state = this.model ? 'on' : 'off'\n        let classes = base + state\n        if (this.color) {\n          classes = `${classes} ${base}${this.color}`\n        }\n        return classes\n      },\n      model: {\n        get () {\n          return this.value\n        },\n        set (value) {\n          this.$emit('input', value)\n        }\n      }\n    },\n    methods: {\n      triggerToggle () {\n        this.model = !this.model\n      }\n    }\n  }\n</script>\n<style>\n</style>\n"]}]}
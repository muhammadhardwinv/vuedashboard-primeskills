{"remainingRequest":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\pages\\Dashboard\\Pages\\Login.vue?vue&type=style&index=0&id=40348ea2&lang=css&","dependencies":[{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\pages\\Dashboard\\Pages\\Login.vue","mtime":1684852200840},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682566248803},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682566250605},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\postcss-loader\\src\\index.js","mtime":1682566249506},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682566248145},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js","mtime":1682566250057}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5uYXZiYXItbmF2IC5uYXYtaXRlbSBwIHsKICBsaW5lLWhlaWdodDogaW5oZXJpdDsKICBtYXJnaW4tbGVmdDogNXB4Owp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AA2RA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/pages/Dashboard/Pages","sourcesContent":["mhv mhv#0492 mute — 23/02/2023 17:00 KAMIS berhasil migrate database code\ntemplate administrator dashboard namun masih stuck saat ingin login menuju\ndashboard dikarenakan kendala back-end flow. ASG KAMIS-JUM'AT membatasi halaman\nlogin ada case sample project 1. langsung direct ke dashboard page, security\npada login. 2. membuat bypass supaya user dapat langsung masuk ke dashboard.\nEveryone welcome unmute ! — 23/02/2023 18:05 web monitoring PC just landed. —\n24/02/2023 09:15 mute — 25/03/2023 11:38 riseofluxferre Akusukaemas99 mute —\n29/03/2023 18:40 021 - 22784649 Telpon Rumah Cilandak mute — 14/04/2023 20:09\nnumpang naro ini bentar Attachment file type: document\nFormulir_Berhenti_Berlanggan_Netciti_Muhammad_Hardwin_V_9812001832.docx 53.27 KB\nmute — 14/04/2023 23:51 GraphicEQ: 32 14; 64 10.5; 125 4; 250 3; 500 1; 1000 0;\n2000 0; 4000 0; 8000 0.5; 16000 1 kalo terlalu ngebass GraphicEQ: 32 13; 64 9.5;\n125 4; 250 3; 500 1; 1000 0; 2000 0; 4000 0; 8000 0.5; 16000 1 GraphicEQ: 32 18;\n64 12.5; 125 3; 250 2; 500 0; 1000 -1; 2000 -1; 4000 0; 8000 1.5; 16000 4 mute —\n15/04/2023 00:15 best balanced GraphicEQ: 16 16.4; 32 15; 64 9.5; 125 3; 250 2;\n500 3; 1000 2; 2000 -1; 4000 0; 8000 1.5; 16000 4 mute — 15/04/2023 22:29 HE 60\nIF EQ -> Sennheiser HE 60 IF mute — 15/04/2023 22:44\nhttps://www.reddit.com/r/headphones/comments/pmowab/help_with_hesuvi/ reddit\nr/headphones - Help with HeSuVi 2 votes and 9 comments so far on Reddit Image\nmute — 17/04/2023 09:32\nhttps://colorlib.com/wp/free-bootstrap-admin-dashboard-templates/ Colorlib 40\nFree Bootstrap Admin Dashboard Templates For Your Web App 2023 The most\npromising and mobile-ready free Bootstrap admin dashboard templates for SaaS\napplications and other online projects. 40 Free Bootstrap Admin Dashboard\nTemplates For Your Web App 2023 mute — 18/04/2023 11:15\nhttps://marvel.fandom.com/wiki/Marvel_Database:Comic_Template Marvel Database\nMarvel Database:Comic Template mute — 26/04/2023 11:51 { \"info\": {\n\"_postman_id\": \"3143281f-6d71-4321-9914-0babf5c20621\", \"name\": \"Comic\nManagement\", \"schema\":\n\"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\",\n\"_exporter_id\": \"26237642\" Expand Comic_Management.postman_collection.json 16 KB\nmute — 29/04/2023 21:47 alifrafii akuketakutan mute — 04/05/2023 17:51\nridwanyunip patbhe2011 mute — 16/05/2023 13:45 mhv14__ ametlovepute mute —\n19/05/2023 15:31\n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\nmute — Today at 21:28\n<template>\n  <auth-layout pageClass=\"login-page\">\n    <div class=\"row d-flex justify-content-center align-items-center\">\n      <div class=\"col-lg-4 col-md-6 col-sm-8\">\n        <ValidationObserver v-slot=\"{ handleSubmit }\">\n          <!--You can specify transitions on initial render. The `card-hidden` class will be present initially and then it will be removed-->\n          <form @submit.prevent=\"handleSubmit(submit)\">\n            <fade-render-transition>\n              <card>\n                <div slot=\"header\">\n                  <h3 class=\"card-title text-center\">Masuk</h3>\n                </div>\n                <div>\n                  <ValidationProvider\n                    name=\"email\"\n                    rules=\"required|email\"\n                    v-slot=\"{ passed, failed }\"\n                  >\n                    <fg-input\n                      type=\"email\"\n                      :error=\"failed ? 'The Email field is required' : null\"\n                      :hasSuccess=\"passed\"\n                      label=\"Email address\"\n                      name=\"email\"\n                      v-model=\"email\"\n                    >\n                    </fg-input>\n                  </ValidationProvider>\n                  <ValidationProvider\n                    name=\"password\"\n                    rules=\"required|min:5\"\n                    v-slot=\"{ passed, failed }\"\n                  >\n                    <fg-input\n                      type=\"password\"\n                      :error=\"failed ? 'The Password field is required' : null\"\n                      :hasSuccess=\"passed\"\n                      name=\"password\"\n                      label=\"Password\"\n                      v-model=\"password\"\n                    >\n                    </fg-input>\n                  </ValidationProvider>\n                  <fg-input>\n                    <l-checkbox v-model=\"subscribe\">\n                      Subscribe to newsletter\n                    </l-checkbox>\n                  </fg-input>\n                </div>\n                <div class=\"text-center\">\n                  <button\n                    @click=\"onLogin\"\n                    type=\"submit\"\n                    class=\"btn btn-fill btn-info btn-round btn-wd\"\n                  >\n                    Masuk\n                  </button>\n                  <br />\n                  <div class=\"forgot\">\n                    <router-link to=\"/register\" class=\"card-category\">\n                      Forgot your password?\n                    </router-link>\n                  </div>\n                </div>\n              </card>\n            </fade-render-transition>\n          </form>\n        </ValidationObserver>\n      </div>\n    </div>\n  </auth-layout>\n</template>\n<script>\nimport {\n  Checkbox as LCheckbox,\n  FadeRenderTransition,\n} from \"src/components/index\";\nimport AuthLayout from \"./AuthLayout.vue\";\nimport { extend } from \"vee-validate\";\nimport { required, email, min } from \"vee-validate/dist/rules\";\nimport axios from \"axios\";\n\nextend(\"email\", email);\nextend(\"required\", required);\nextend(\"min\", min);\n\nexport default {\n  components: {\n    LCheckbox,\n    FadeRenderTransition,\n    AuthLayout,\n  },\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      subscribe: true,\n    };\n  },\n  // created() {\n... (49 lines left)\nCollapse\nmessage.txt\n5 KB\n<template>\n  <auth-layout pageClass=\"login-page\">\n    <div class=\"row d-flex justify-content-center align-items-center\">\n      <div class=\"col-lg-4 col-md-6 col-sm-8\">\n        <ValidationObserver v-slot=\"{ handleSubmit }\">\n          <!--You can specify transitions on initial render. The `card-hidden` class will be present initially and then it will be removed-->\n          <form @submit.prevent=\"handleSubmit(submit)\">\n            <fade-render-transition>\n              <card>\n                <div slot=\"header\">\n                  <h3 class=\"card-title text-center\">Masuk</h3>\n                </div>\n                <div>\n                  <ValidationProvider\n                    name=\"email\"\n                    rules=\"required|email\"\n                    v-slot=\"{ passed, failed }\"\n                  >\n                    <fg-input\n                      type=\"email\"\n                      :error=\"failed ? 'The Email field is required' : null\"\n                      :hasSuccess=\"passed\"\n                      label=\"Email address\"\n                      name=\"email\"\n                      v-model=\"email\"\n                    >\n                    </fg-input>\n                  </ValidationProvider>\n                  <ValidationProvider\n                    name=\"password\"\n                    rules=\"required|min:5\"\n                    v-slot=\"{ passed, failed }\"\n                  >\n                    <fg-input\n                      type=\"password\"\n                      :error=\"failed ? 'The Password field is required' : null\"\n                      :hasSuccess=\"passed\"\n                      name=\"password\"\n                      label=\"Password\"\n                      v-model=\"password\"\n                    >\n                    </fg-input>\n                  </ValidationProvider>\n                  <fg-input>\n                    <l-checkbox v-model=\"subscribe\">\n                      Subscribe to newsletter\n                    </l-checkbox>\n                  </fg-input>\n                </div>\n                <div class=\"text-center\">\n                  <button\n                    @click=\"onLogin\"\n                    type=\"submit\"\n                    class=\"btn btn-fill btn-info btn-round btn-wd\"\n                  >\n                    Masuk\n                  </button>\n                  <br />\n                  <div class=\"forgot\">\n                    <router-link to=\"/register\" class=\"card-category\">\n                      Forgot your password?\n                    </router-link>\n                  </div>\n                </div>\n              </card>\n            </fade-render-transition>\n          </form>\n        </ValidationObserver>\n      </div>\n    </div>\n  </auth-layout>\n</template>\n<script>\nimport {\n  Checkbox as LCheckbox,\n  FadeRenderTransition,\n} from \"src/components/index\";\nimport AuthLayout from \"./AuthLayout.vue\";\nimport { extend } from \"vee-validate\";\nimport { required, email, min } from \"vee-validate/dist/rules\";\nimport axios from \"axios\";\n\nextend(\"email\", email);\nextend(\"required\", required);\nextend(\"min\", min);\n\nexport default {\n  components: {\n    LCheckbox,\n    FadeRenderTransition,\n    AuthLayout,\n  },\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      subscribe: true,\n    };\n  },\n  // created() {\n  //   this.token = JSON.parse(localStorage.getItem(\"token\")) || [];\n  // },\n\n  methods: {\n    getData() {\n      const userData = JSON.parse(localStorage.getItem(\"data\"));\n    },\n    submit() {\n      alert(\"Form has been submitted!\");\n    },\n    onLogin() {\n      const response = axios\n        .post(\"https://api-lightspace.primeskills.id/api/auth/login\", {\n          email: this.email,\n          password: this.password,\n        })\n        .then((response) => {\n          this.$router.push({ name: \"adminDashboard\" });\n          window.alert(\"Login Success\");\n          // localStorage.setItem(response.data.token);\n          // console.log(response.data.data.token);\n          this.data = response.data.data.token;\n          localStorage.setItem(\"token\", response.data.data.token);\n        })\n        .catch((error) => {\n          console.log(error);\n          window.alert(\"Login Failed\");\n        });\n    },\n    toggleNavbar() {\n      document.body.classList.toggle(\"nav-open\");\n    },\n    closeMenu() {\n      document.body.classList.remove(\"nav-open\");\n      document.body.classList.remove(\"off-canvas-sidebar\");\n    },\n  },\n  beforeDestroy() {\n    this.closeMenu();\n  },\n};\n</script>\n<style>\n.navbar-nav .nav-item p {\n  line-height: inherit;\n  margin-left: 5px;\n}\n</style>\n"]}]}
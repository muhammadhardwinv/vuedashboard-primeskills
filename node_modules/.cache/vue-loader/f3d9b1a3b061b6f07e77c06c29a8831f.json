{"remainingRequest":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\pages\\Dashboard\\Forms\\ExtendedForms.vue?vue&type=style&index=0&id=c5592232&lang=css&","dependencies":[{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\pages\\Dashboard\\Forms\\ExtendedForms.vue","mtime":1670231463000},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682566248803},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682566250605},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\postcss-loader\\src\\index.js","mtime":1682566249506},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682566248145},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js","mtime":1682566250057}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5leHRlbmRlZC1mb3JtcyAuZWwtc2VsZWN0IHsKICB3aWR0aDogMTAwJTsKICBtYXJnaW4tYm90dG9tOiAzMHB4Owp9CgouZXh0ZW5kZWQtZm9ybXMgLnByb2dyZXNzIHsKICBtYXJnaW4tYm90dG9tOiAzMHB4Owp9Cg=="},{"version":3,"sources":["ExtendedForms.vue"],"names":[],"mappings":";AA8RA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ExtendedForms.vue","sourceRoot":"src/pages/Dashboard/Forms","sourcesContent":["<template>\n  <div class=\"extended-forms\">\n    <card>\n      <div class=\"col-12\">\n        <div class=\"row\">\n          <div class=\"col-lg-4\">\n            <h4 class=\"title\">Datetime Picker</h4>\n            <fg-input>\n              <el-date-picker\n                v-model=\"dateTimePicker\"\n                type=\"datetimerange\"\n                placeholder=\"Datetime picker here\"\n                :picker-options=\"pickerOptions1\">\n              </el-date-picker>\n            </fg-input>\n          </div>\n          <div class=\"col-lg-4\">\n            <h4 class=\"title\">Date Picker</h4>\n            <fg-input>\n              <el-date-picker v-model=\"datePicker\" type=\"date\" placeholder=\"Date picker here\"\n                              :picker-options=\"pickerOptions1\">\n              </el-date-picker>\n            </fg-input>\n          </div>\n          <div class=\"col-lg-4\">\n            <h4 class=\"title\">Time Picker</h4>\n            <fg-input>\n              <el-time-select\n                v-model=\"timePicker\"\n                :picker-options=\"{\n                  start: '00:00',\n                  step: '00:15',\n                  end: '23:59'\n                }\"\n                placeholder=\"Time picker here\">\n              </el-time-select>\n            </fg-input>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <h4 class=\"title\">Switches</h4>\n            <div class=\"row\">\n              <div class=\"col-md-4\">\n                <p class=\"category\">Default</p>\n                <l-switch v-model=\"switches.defaultOn\" type=\"primary\" on-text=\"ON\" off-text=\"OFF\"></l-switch>\n                <l-switch v-model=\"switches.defaultOff\" type=\"primary\" on-text=\"ON\" off-text=\"OFF\"></l-switch>\n              </div>\n              <div class=\"col-md-4\">\n                <p class=\"category\">Plain</p>\n                <l-switch v-model=\"switches.plainOn\"></l-switch>\n                <l-switch v-model=\"switches.plainOff\"></l-switch>\n\n              </div>\n              <div class=\"col-md-4\">\n                <p class=\"category\">With Icons</p>\n                <l-switch v-model=\"switches.withIconsOn\">\n                  <i class=\"fa fa-check\" slot=\"on\"></i>\n                  <i class=\"fa fa-times\" slot=\"off\"></i>\n                </l-switch>\n                <l-switch v-model=\"switches.withIconsOff\">\n                  <i class=\"fa fa-check\" slot=\"on\"></i>\n                  <i class=\"fa fa-times\" slot=\"off\"></i>\n                </l-switch>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <h4 class=\"title\">Tags</h4>\n\n            <el-tag\n              :key=\"tag\"\n              v-for=\"tag in tags.dynamicTags\"\n              size=\"small\"\n              type=\"warning\"\n              :closable=\"true\"\n              :close-transition=\"false\"\n              @close=\"handleClose(tag)\"\n            >\n              {{tag}}\n            </el-tag>\n\n            <input type=\"text\" placeholder=\"New Tag\"\n                   class=\"form-control input-new-tag\"\n                   v-model=\"tags.inputValue\"\n                   ref=\"saveTagInput\"\n                   size=\"mini\"\n                   @keyup.enter=\"handleInputConfirm\"\n                   @blur=\"handleInputConfirm\"/>\n          </div>\n          <div class=\"col-md-6\">\n            <h4 class=\"title\">Customisable Select</h4>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <el-select class=\"select-danger\"\n                           size=\"large\"\n                           placeholder=\"Single Select\"\n                           v-model=\"selects.simple\">\n                  <el-option v-for=\"option in selects.countries\"\n                             class=\"select-danger\"\n                             :value=\"option.value\"\n                             :label=\"option.label\"\n                             :key=\"option.label\">\n                  </el-option>\n                </el-select>\n              </div>\n              <div class=\"col-md-6\">\n                <el-select multiple class=\"select-primary\"\n                           size=\"large\"\n                           v-model=\"selects.multiple\"\n                           placeholder=\"Multiple Select\">\n                  <el-option v-for=\"option in selects.countries\"\n                             class=\"select-primary\"\n                             :value=\"option.value\"\n                             :label=\"option.label\"\n                             :key=\"option.label\">\n                  </el-option>\n                </el-select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <h4 class=\"title\">Progress Bars</h4>\n            <l-progress :value=\"30\"></l-progress>\n            <l-progress :value=\"60\" type=\"info\"></l-progress>\n            <l-progress\n              :values=\"[{type:'success', value:35},{type:'warning', value:20}, {type:'danger', value: 10}]\">\n            </l-progress>\n          </div>\n          <div class=\"col-md-6\">\n            <h4 class=\"title\">Sliders</h4>\n            <el-slider class=\"slider-success\"\n                       v-model=\"sliders.simple\">\n            </el-slider>\n            <br>\n            <el-slider class=\"slider-info\"\n                       v-model=\"sliders.rangeSlider\"\n                       :max=\"100\"\n                       range>\n            </el-slider>\n          </div>\n        </div>\n      </div>\n    </card> <!-- end card -->\n  </div>\n</template>\n<script>\n  import { DatePicker, TimeSelect, Slider, Tag, Input, Button, Select, Option } from 'element-ui'\n  import {\n    Progress as LProgress,\n    Switch as LSwitch,\n    FormGroupInput as FgInput\n  } from 'src/components/index'\n\n  export default {\n    components: {\n      FgInput,\n      [DatePicker.name]: DatePicker,\n      [TimeSelect.name]: TimeSelect,\n      [Slider.name]: Slider,\n      [Tag.name]: Tag,\n      [Input.name]: Input,\n      [Button.name]: Button,\n      [Option.name]: Option,\n      [Select.name]: Select,\n      LSwitch,\n      LProgress\n    },\n    data () {\n      return {\n        enabledRadio: '2',\n        disabledRadio: '2',\n        switches: {\n          defaultOn: true,\n          defaultOff: false,\n          plainOn: true,\n          plainOff: false,\n          withIconsOn: true,\n          withIconsOff: false\n        },\n        sliders: {\n          simple: 30,\n          rangeSlider: [20, 50]\n        },\n        selects: {\n          simple: '',\n          countries: [{value: 'Bahasa Indonesia', label: 'Bahasa Indonesia'},\n            {value: 'Bahasa Melayu', label: 'Bahasa Melayu'},\n            {value: 'Català', label: 'Català'},\n            {value: 'Dansk', label: 'Dansk'},\n            {value: 'Deutsch', label: 'Deutsch'},\n            {value: 'English', label: 'English'},\n            {value: 'Español', label: 'Español'},\n            {value: 'Eλληνικά', label: 'Eλληνικά'},\n            {value: 'Français', label: 'Français'},\n            {value: 'Italiano', label: 'Italiano'},\n            {value: 'Magyar', label: 'Magyar'},\n            {value: 'Nederlands', label: 'Nederlands'},\n            {value: 'Norsk', label: 'Norsk'},\n            {value: 'Polski', label: 'Polski'},\n            {value: 'Português', label: 'Português'},\n            {value: 'Suomi', label: 'Suomi'},\n            {value: 'Svenska', label: 'Svenska'},\n            {value: 'Türkçe', label: 'Türkçe'},\n            {value: 'Íslenska', label: 'Íslenska'},\n            {value: 'Čeština', label: 'Čeština'},\n            {value: 'Русский', label: 'Русский'},\n            {value: 'ภาษาไทย', label: 'ภาษาไทย'},\n            {value: '中文 (简体)', label: '中文 (简体)'},\n            {value: 'W\">中文 (繁體)', label: 'W\">中文 (繁體)'},\n            {value: '日本語', label: '日本語'},\n            {value: '한국어', label: '한국어'}],\n          multiple: 'ARS'\n        },\n        tags: {\n          dynamicTags: ['Tag 1', 'Tag 2', 'Tag 3'],\n          inputVisible: false,\n          inputValue: ''\n        },\n        pickerOptions1: {\n          shortcuts: [{\n            text: 'Today',\n            onClick (picker) {\n              picker.$emit('pick', new Date())\n            }\n          },\n          {\n            text: 'Yesterday',\n            onClick (picker) {\n              const date = new Date()\n              date.setTime(date.getTime() - 3600 * 1000 * 24)\n              picker.$emit('pick', date)\n            }\n          },\n          {\n            text: 'A week ago',\n            onClick (picker) {\n              const date = new Date()\n              date.setTime(date.getTime() - 3600 * 1000 * 24 * 7)\n              picker.$emit('pick', date)\n            }\n          }]\n        },\n        datePicker: '',\n        dateTimePicker: '',\n        timePicker: ''\n      }\n    },\n    methods: {\n      handleClose (tag) {\n        this.tags.dynamicTags.splice(this.tags.dynamicTags.indexOf(tag), 1)\n      },\n\n      showInput () {\n        this.tags.inputVisible = true\n        this.$nextTick(() => {\n          this.$refs.saveTagInput.$refs.input.focus()\n        })\n      },\n\n      handleInputConfirm () {\n        let inputValue = this.tags.inputValue\n        if (inputValue) {\n          this.tags.dynamicTags.push(inputValue)\n        }\n        this.tags.inputVisible = false\n        this.tags.inputValue = ''\n      }\n    }\n  }\n</script>\n<style>\n  .extended-forms .el-select {\n    width: 100%;\n    margin-bottom: 30px;\n  }\n\n  .extended-forms .progress {\n    margin-bottom: 30px;\n  }\n</style>\n"]}]}
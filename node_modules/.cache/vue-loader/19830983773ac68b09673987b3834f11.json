{"remainingRequest":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\pages\\Dashboard\\Charts.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\pages\\Dashboard\\Charts.vue","mtime":1670231463000},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682566248145},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\babel-loader\\lib\\index.js","mtime":1682566249509},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682566248145},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js","mtime":1682566250057}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YSAoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgJENoYXJ0aXN0OiBudWxsCiAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgIGluaXRQZXJmb3JtYW5jZUNoYXJ0ICgpIHsKICAgICAgICBjb25zdCBkYXRhUGVyZm9ybWFuY2UgPSB7CiAgICAgICAgICBsYWJlbHM6IFsnNnBtJywgJzlwbScsICcxMXBtJywgJzJhbScsICc0YW0nLCAnOGFtJywgJzJwbScsICc1cG0nLCAnOHBtJywgJzExcG0nLCAnNGFtJ10sCiAgICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgICAgWzEsIDYsIDgsIDcsIDQsIDcsIDgsIDEyLCAxNiwgMTcsIDE0LCAxM10KICAgICAgICAgIF0KICAgICAgICB9CgogICAgICAgIGNvbnN0IG9wdGlvbnNQZXJmb3JtYW5jZSA9IHsKICAgICAgICAgIHNob3dQb2ludDogZmFsc2UsCiAgICAgICAgICBsaW5lU21vb3RoOiB0cnVlLAogICAgICAgICAgYXhpc1g6IHsKICAgICAgICAgICAgc2hvd0dyaWQ6IGZhbHNlLAogICAgICAgICAgICBzaG93TGFiZWw6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzWTogewogICAgICAgICAgICBvZmZzZXQ6IDQwCgogICAgICAgICAgfSwKICAgICAgICAgIGxvdzogMCwKICAgICAgICAgIGhpZ2g6IDE2LAogICAgICAgICAgaGVpZ2h0OiAnMjUwcHgnCiAgICAgICAgfQoKICAgICAgICB0aGlzLiRDaGFydGlzdC5MaW5lKCcjY2hhcnRQZXJmb3JtYW5jZScsIGRhdGFQZXJmb3JtYW5jZSwgb3B0aW9uc1BlcmZvcm1hbmNlKQogICAgICB9LAogICAgICBpbml0QWN0aXZpdHlDaGFydCAoKSB7CiAgICAgICAgY29uc3QgZGF0YSA9IHsKICAgICAgICAgIGxhYmVsczogWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWFpJywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYyddLAogICAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICAgIFs1NDIsIDQ0MywgMzIwLCA3ODAsIDU1MywgNDUzLCAzMjYsIDQzNCwgNTY4LCA2MTAsIDc1NiwgODk1XSwKICAgICAgICAgICAgWzQxMiwgMjQzLCAyODAsIDU4MCwgNDUzLCAzNTMsIDMwMCwgMzY0LCAzNjgsIDQxMCwgNjM2LCA2OTVdCiAgICAgICAgICBdCiAgICAgICAgfQoKICAgICAgICBjb25zdCBvcHRpb25zID0gewogICAgICAgICAgc2VyaWVzQmFyRGlzdGFuY2U6IDEwLAogICAgICAgICAgYXhpc1g6IHsKICAgICAgICAgICAgc2hvd0dyaWQ6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgaGVpZ2h0OiAnMjUwcHgnCiAgICAgICAgfQoKICAgICAgICBjb25zdCByZXNwb25zaXZlT3B0aW9ucyA9IFsKICAgICAgICAgIFsnc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2NDBweCknLCB7CiAgICAgICAgICAgIHNlcmllc0JhckRpc3RhbmNlOiA1LAogICAgICAgICAgICBheGlzWDogewogICAgICAgICAgICAgIGxhYmVsSW50ZXJwb2xhdGlvbkZuYyAodmFsdWUpIHsKICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZVswXQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfV0KICAgICAgICBdCgogICAgICAgIHRoaXMuJENoYXJ0aXN0LkJhcignI2NoYXJ0QWN0aXZpdHknLCBkYXRhLCBvcHRpb25zLCByZXNwb25zaXZlT3B0aW9ucykKICAgICAgfSwKICAgICAgaW5pdFN0b2NrQ2hhcnQgKCkgewogICAgICAgIGNvbnN0IGRhdGFTdG9jayA9IHsKICAgICAgICAgIGxhYmVsczogWydcJzA3JywgJ1wnMDgnLCAnXCcwOScsICdcJzEwJywgJ1wnMTEnLCAnXCcxMicsICdcJzEzJywgJ1wnMTQnLCAnXCcxNSddLAogICAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICAgIFsyMi4yMCwgMzQuOTAsIDQyLjI4LCA1MS45MywgNjIuMjEsIDgwLjIzLCA2Mi4yMSwgODIuMTIsIDEwMi41MCwgMTA3LjIzXQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgICBjb25zdCBvcHRpb25zU3RvY2sgPSB7CiAgICAgICAgICBsaW5lU21vb3RoOiBmYWxzZSwKICAgICAgICAgIGF4aXNZOiB7CiAgICAgICAgICAgIG9mZnNldDogNDAsCiAgICAgICAgICAgIGxhYmVsSW50ZXJwb2xhdGlvbkZuYyAodmFsdWUpIHsKICAgICAgICAgICAgICByZXR1cm4gYCQke3ZhbHVlfWAKICAgICAgICAgICAgfQoKICAgICAgICAgIH0sCiAgICAgICAgICBsb3c6IDEwLAogICAgICAgICAgaGVpZ2h0OiAnMjUwcHgnLAogICAgICAgICAgaGlnaDogMTEwLAogICAgICAgICAgY2xhc3NOYW1lczogewogICAgICAgICAgICBwb2ludDogJ2N0LXBvaW50IGN0LWdyZWVuJywKICAgICAgICAgICAgbGluZTogJ2N0LWxpbmUgY3QtZ3JlZW4nCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHRoaXMuJENoYXJ0aXN0LkxpbmUoJyNjaGFydFN0b2NrJywgZGF0YVN0b2NrLCBvcHRpb25zU3RvY2spCiAgICAgIH0sCiAgICAgIGluaXRWaWV3c0NoYXJ0ICgpIHsKICAgICAgICBjb25zdCBkYXRhVmlld3MgPSB7CiAgICAgICAgICBsYWJlbHM6IFsnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01haScsICdKdW4nLCAnSnVsJywgJ0F1ZycsICdTZXAnLCAnT2N0JywgJ05vdicsICdEZWMnXSwKICAgICAgICAgIHNlcmllczogWwogICAgICAgICAgICBbNTQyLCA0NDMsIDMyMCwgNzgwLCA1NTMsIDQ1MywgMzI2LCA0MzQsIDU2OCwgNjEwLCA3NTYsIDg5NV0KICAgICAgICAgIF0KICAgICAgICB9CiAgICAgICAgY29uc3Qgb3B0aW9uc1ZpZXdzID0gewogICAgICAgICAgc2VyaWVzQmFyRGlzdGFuY2U6IDEwLAogICAgICAgICAgY2xhc3NOYW1lczogewogICAgICAgICAgICBiYXI6ICdjdC1iYXInCiAgICAgICAgICB9LAogICAgICAgICAgYXhpc1g6IHsKICAgICAgICAgICAgc2hvd0dyaWQ6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgaGVpZ2h0OiAnMjUwcHgnCiAgICAgICAgfQogICAgICAgIGNvbnN0IHJlc3BvbnNpdmVPcHRpb25zVmlld3MgPSBbCiAgICAgICAgICBbJ3NjcmVlbiBhbmQgKG1heC13aWR0aDogNjQwcHgpJywgewogICAgICAgICAgICBzZXJpZXNCYXJEaXN0YW5jZTogNSwKICAgICAgICAgICAgYXhpc1g6IHsKICAgICAgICAgICAgICBsYWJlbEludGVycG9sYXRpb25GbmMgKHZhbHVlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWVbMF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH1dCiAgICAgICAgXQogICAgICAgIHRoaXMuJENoYXJ0aXN0LkJhcignI2NoYXJ0Vmlld3MnLCBkYXRhVmlld3MsIG9wdGlvbnNWaWV3cywgcmVzcG9uc2l2ZU9wdGlvbnNWaWV3cykKICAgICAgfSwKICAgICAgaW5pdENoYXJ0cyAoKSB7CiAgICAgICAgdGhpcy5pbml0UGVyZm9ybWFuY2VDaGFydCgpCiAgICAgICAgdGhpcy5pbml0U3RvY2tDaGFydCgpCiAgICAgICAgdGhpcy5pbml0Vmlld3NDaGFydCgpCiAgICAgICAgdGhpcy5pbml0QWN0aXZpdHlDaGFydCgpCiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBtb3VudGVkICgpIHsKICAgICAgbGV0IGNoYXJ0aXN0ID0gYXdhaXQgaW1wb3J0KCdjaGFydGlzdCcpCiAgICAgIHRoaXMuJENoYXJ0aXN0ID0gY2hhcnRpc3QuZGVmYXVsdCA/IGNoYXJ0aXN0LmRlZmF1bHQgOiBjaGFydGlzdDsKICAgICAgdGhpcy5pbml0Q2hhcnRzKCkKICAgIH0KICB9Cg=="},{"version":3,"sources":["Charts.vue"],"names":[],"mappings":";AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Charts.vue","sourceRoot":"src/pages/Dashboard","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-lg-6\">\n      <card title=\"24 Hours Performance\" subTitle=\"Line Chart\">\n        <div id=\"chartPerformance\" class=\"ct-chart\"></div>\n      </card>\n    </div>\n\n    <div class=\"col-lg-6\">\n      <card title=\"NASDAQ: AAPL\" subTitle=\"Line Chart with Points\">\n        <div id=\"chartStock\" class=\"ct-chart\"></div>\n      </card>\n    </div>\n    <div class=\"col-lg-6\">\n      <card title=\"Views\" subTitle=\"Bar Chart\">\n        <div id=\"chartViews\" class=\"ct-chart\"></div>\n      </card>\n    </div>\n    <div class=\"col-lg-6\">\n      <card title=\"Activity\" subTitle=\"Multiple Bars Chart\">\n        <div id=\"chartActivity\" class=\"ct-chart\"></div>\n      </card>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    data () {\n      return {\n        $Chartist: null\n      }\n    },\n    methods: {\n      initPerformanceChart () {\n        const dataPerformance = {\n          labels: ['6pm', '9pm', '11pm', '2am', '4am', '8am', '2pm', '5pm', '8pm', '11pm', '4am'],\n          series: [\n            [1, 6, 8, 7, 4, 7, 8, 12, 16, 17, 14, 13]\n          ]\n        }\n\n        const optionsPerformance = {\n          showPoint: false,\n          lineSmooth: true,\n          axisX: {\n            showGrid: false,\n            showLabel: true\n          },\n          axisY: {\n            offset: 40\n\n          },\n          low: 0,\n          high: 16,\n          height: '250px'\n        }\n\n        this.$Chartist.Line('#chartPerformance', dataPerformance, optionsPerformance)\n      },\n      initActivityChart () {\n        const data = {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n          series: [\n            [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\n            [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\n          ]\n        }\n\n        const options = {\n          seriesBarDistance: 10,\n          axisX: {\n            showGrid: false\n          },\n          height: '250px'\n        }\n\n        const responsiveOptions = [\n          ['screen and (max-width: 640px)', {\n            seriesBarDistance: 5,\n            axisX: {\n              labelInterpolationFnc (value) {\n                return value[0]\n              }\n            }\n          }]\n        ]\n\n        this.$Chartist.Bar('#chartActivity', data, options, responsiveOptions)\n      },\n      initStockChart () {\n        const dataStock = {\n          labels: ['\\'07', '\\'08', '\\'09', '\\'10', '\\'11', '\\'12', '\\'13', '\\'14', '\\'15'],\n          series: [\n            [22.20, 34.90, 42.28, 51.93, 62.21, 80.23, 62.21, 82.12, 102.50, 107.23]\n          ]\n        }\n        const optionsStock = {\n          lineSmooth: false,\n          axisY: {\n            offset: 40,\n            labelInterpolationFnc (value) {\n              return `$${value}`\n            }\n\n          },\n          low: 10,\n          height: '250px',\n          high: 110,\n          classNames: {\n            point: 'ct-point ct-green',\n            line: 'ct-line ct-green'\n          }\n        }\n        this.$Chartist.Line('#chartStock', dataStock, optionsStock)\n      },\n      initViewsChart () {\n        const dataViews = {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n          series: [\n            [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n          ]\n        }\n        const optionsViews = {\n          seriesBarDistance: 10,\n          classNames: {\n            bar: 'ct-bar'\n          },\n          axisX: {\n            showGrid: false\n          },\n          height: '250px'\n        }\n        const responsiveOptionsViews = [\n          ['screen and (max-width: 640px)', {\n            seriesBarDistance: 5,\n            axisX: {\n              labelInterpolationFnc (value) {\n                return value[0]\n              }\n            }\n          }]\n        ]\n        this.$Chartist.Bar('#chartViews', dataViews, optionsViews, responsiveOptionsViews)\n      },\n      initCharts () {\n        this.initPerformanceChart()\n        this.initStockChart()\n        this.initViewsChart()\n        this.initActivityChart()\n      }\n    },\n    async mounted () {\n      let chartist = await import('chartist')\n      this.$Chartist = chartist.default ? chartist.default : chartist;\n      this.initCharts()\n    }\n  }\n</script>\n<style>\n</style>\n"]}]}
{"remainingRequest":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\pages\\Dashboard\\Tables\\CRUDTables.vue?vue&type=style&index=0&id=44245a5e&lang=css&","dependencies":[{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\pages\\Dashboard\\Tables\\CRUDTables.vue","mtime":1684125175900},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682566248803},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682566250605},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\postcss-loader\\src\\index.js","mtime":1682566249506},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682566248145},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js","mtime":1682566250057}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubmF2YmFyLW5hdiAubmF2LWl0ZW0gcCB7DQogIGxpbmUtaGVpZ2h0OiBpbmhlcml0Ow0KICBtYXJnaW4tbGVmdDogNXB4Ow0KfQ0K"},{"version":3,"sources":["CRUDTables.vue"],"names":[],"mappings":";AAuIA;AACA;AACA;AACA","file":"CRUDTables.vue","sourceRoot":"src/pages/Dashboard/Tables","sourcesContent":["<template>\r\n  <auth-layout pageClass=\"login-page\">\r\n    <div class=\"row d-flex justify-content-center align-items-center\">\r\n      <div class=\"col-lg-4 col-md-6 col-sm-8\">\r\n        <ValidationObserver v-slot=\"{ handleSubmit }\">\r\n          <!--You can specify transitions on initial render. The `card-hidden` class will be present initially and then it will be removed-->\r\n          <form @submit.prevent=\"handleSubmit(submit)\">\r\n            <fade-render-transition>\r\n              <card>\r\n                <div slot=\"header\">\r\n                  <h3 class=\"card-title text-center\">Masuk</h3>\r\n                </div>\r\n                <div>\r\n                  <ValidationProvider\r\n                    name=\"name\"\r\n                    rules=\"required|name\"\r\n                    v-slot=\"{ passed, failed }\"\r\n                  >\r\n                    <fg-input\r\n                      type=\"name\"\r\n                      :error=\"failed ? 'The name field is required' : null\"\r\n                      :hasSuccess=\"passed\"\r\n                      label=\"itemName\"\r\n                      name=\"name\"\r\n                      v-model=\"name\"\r\n                    >\r\n                    </fg-input>\r\n                  </ValidationProvider>\r\n                  <ValidationProvider\r\n                    name=\"quantity\"\r\n                    rules=\"required|min:1\"\r\n                    v-slot=\"{ passed, failed }\"\r\n                  >\r\n                    <fg-input\r\n                      type=\"quantity\"\r\n                      :error=\"failed ? 'The quantity field is required' : null\"\r\n                      :hasSuccess=\"passed\"\r\n                      name=\"quantity\"\r\n                      label=\"quantity\"\r\n                      v-model=\"quantity\"\r\n                    >\r\n                    </fg-input>\r\n                  </ValidationProvider>\r\n                  <ValidationProvider\r\n                    name=\"category\"\r\n                    rules=\"required|category\"\r\n                    v-slot=\"{ passed, failed }\"\r\n                  >\r\n                    <fg-input\r\n                      type=\"category\"\r\n                      :error=\"failed ? 'The category field is required' : null\"\r\n                      :hasSuccess=\"passed\"\r\n                      label=\"category\"\r\n                      name=\"category\"\r\n                      v-model=\"category\"\r\n                    >\r\n                    </fg-input>\r\n                  </ValidationProvider>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <button\r\n                    @click=\"onCreate\"\r\n                    type=\"submit\"\r\n                    class=\"btn btn-fill btn-info btn-round btn-wd\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                  <br />\r\n                </div>\r\n              </card>\r\n            </fade-render-transition>\r\n          </form>\r\n        </ValidationObserver>\r\n      </div>\r\n    </div>\r\n  </auth-layout>\r\n</template>\r\n<script>\r\nimport { FadeRenderTransition } from \"src/components/index\";\r\nimport AuthLayout from \"./src/pagheAuthLayout.vue\";\r\nimport { extend } from \"vee-validate\";\r\nimport { required, name, min } from \"vee-validate/dist/rules\";\r\nimport axios from \"axios\";\r\n\r\nextend(\"name\", name);\r\nextend(\"quantity\", quantity);\r\nextend(\"category\", category);\r\nextend(\"required\", required);\r\nextend(\"min\", min);\r\n\r\nexport default {\r\n  components: {\r\n    FadeRenderTransition,\r\n    AuthLayout,\r\n  },\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      quantity: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    submit() {\r\n      alert(\"Item successfully added.\");\r\n    },\r\n    // onCreate() {\r\n    //   const response = axios\r\n    //     .post(\"https://api-lightspace.primeskills.id/api/auth/login\", {\r\n    //       name: this.name,\r\n    //       quantity: this.quantity,\r\n    //     })\r\n    //     .then((response) => {\r\n    //       this.$router.push({ name: \"adminDashboard\" });\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.log(error);\r\n    //     });\r\n    // },\r\n    onCreate() {\r\n      console.log(\"Item successfully added.\");\r\n    },\r\n    toggleNavbar() {\r\n      document.body.classList.toggle(\"nav-open\");\r\n    },\r\n    closeMenu() {\r\n      document.body.classList.remove(\"nav-open\");\r\n      document.body.classList.remove(\"off-canvas-sidebar\");\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    this.closeMenu();\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.navbar-nav .nav-item p {\r\n  line-height: inherit;\r\n  margin-left: 5px;\r\n}\r\n</style>\r\n"]}]}
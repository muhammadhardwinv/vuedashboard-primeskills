{"remainingRequest":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\components\\SidebarPlugin\\SidebarItem.vue?vue&type=style&index=0&id=61fadc8f&lang=css&","dependencies":[{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\components\\SidebarPlugin\\SidebarItem.vue","mtime":1670231463000},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682566248803},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682566250605},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\postcss-loader\\src\\index.js","mtime":1682566249506},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682566248145},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js","mtime":1682566250057}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zaWRlYmFyLW1lbnUtaXRlbXsKICBjdXJzb3I6IHBvaW50ZXI7Cn0K"},{"version":3,"sources":["SidebarItem.vue"],"names":[],"mappings":";AAuKA;AACA;AACA","file":"SidebarItem.vue","sourceRoot":"src/components/SidebarPlugin","sourcesContent":["<template>\n  <component :is=\"baseComponent\"\n             :to=\"link.path ? link.path : '/'\"\n             class=\"nav-item\"\n             :class=\"{active : isActive}\"\n             tag=\"li\">\n    <a v-if=\"isMenu\"\n       class=\"nav-link sidebar-menu-item\"\n       :aria-expanded=\"!collapsed\"\n       data-toggle=\"collapse\"\n       @click=\"collapseMenu\">\n      <i :class=\"link.icon\"></i>\n      <p>\n        {{link.name}}\n        <b class=\"caret\"></b>\n      </p>\n\n    </a>\n    <div v-if=\"$slots.default || this.isMenu\">\n      <el-collapse-transition>\n        <ul class=\"nav\" v-show=\"!collapsed\">\n          <slot></slot>\n        </ul>\n      </el-collapse-transition>\n    </div>\n\n    <slot name=\"title\" v-if=\"children.length === 0 && !$slots.default && link.path\">\n      <component\n        :to=\"link.path\"\n        @click.native=\"linkClick\"\n        :is=\"elementType(link, false)\"\n        :class=\"{active: link.active}\"\n        class=\"nav-link\"\n        :target=\"link.target\"\n        :href=\"link.path\">\n        <template v-if=\"addLink\">\n          <span class=\"sidebar-mini\">{{link.name.substring(0, 1)}}</span>\n          <span class=\"sidebar-normal\">{{link.name}}</span>\n        </template>\n        <template v-else>\n          <i :class=\"link.icon\"></i>\n          <p>{{link.name}}</p>\n        </template>\n      </component>\n    </slot>\n  </component>\n</template>\n<script>\n  import CollapseTransition from 'element-ui/lib/transitions/collapse-transition'\n\n  export default {\n    name: 'sidebar-item',\n    components: {\n      [CollapseTransition.name]: CollapseTransition\n    },\n    props: {\n      menu: {\n        type: Boolean,\n        default: false\n      },\n      link: {\n        type: Object,\n        default: () => {\n          return {\n            name: '',\n            path: '',\n            children: []\n          }\n        }\n      }\n    },\n    provide () {\n      return {\n        addLink: this.addChild,\n        removeLink: this.removeChild\n      }\n    },\n    inject: {\n      addLink: {default: null},\n      removeLink: {default: null},\n      autoClose: {\n        default: true\n      }\n    },\n    data () {\n      return {\n        children: [],\n        collapsed: true\n      }\n    },\n    computed: {\n      baseComponent () {\n        return this.isMenu || this.link.isRoute ? 'li' : 'router-link'\n      },\n      isMenu () {\n        return this.children.length > 0 || this.menu === true\n      },\n      isActive () {\n        if (this.$route && this.$route.path) {\n          let matchingRoute = this.children.find((c) => this.$route.path.startsWith(c.link.path))\n          if (matchingRoute !== undefined) {\n            return true\n          }\n        }\n        return false\n      }\n    },\n    methods: {\n      addChild (item) {\n        const index = this.$slots.default.indexOf(item.$vnode)\n        this.children.splice(index, 0, item)\n      },\n      removeChild (item) {\n        const tabs = this.children\n        const index = tabs.indexOf(item)\n        tabs.splice(index, 1)\n      },\n      elementType (link, isParent = true) {\n        if (link.isRoute === false) {\n          return isParent ? 'li' : 'a'\n        } else {\n          return 'router-link'\n        }\n      },\n      linkAbbreviation (name) {\n        const matches = name.match(/\\b(\\w)/g)\n        return matches.join('')\n      },\n      linkClick () {\n        if (this.autoClose && this.$sidebar && this.$sidebar.showSidebar === true) {\n          this.$sidebar.displaySidebar(false)\n        }\n      },\n      collapseMenu () {\n        this.collapsed = !this.collapsed\n      },\n      collapseSubMenu (link) {\n        link.collapsed = !link.collapsed\n      }\n    },\n    mounted () {\n      if (this.addLink) {\n        this.addLink(this)\n      }\n      if (this.link.collapsed !== undefined) {\n        this.collapsed = this.link.collapsed\n      }\n      if (this.isActive && this.isMenu) {\n        this.collapsed = false\n      }\n    },\n    destroyed () {\n      if (this.$el && this.$el.parentNode) {\n        this.$el.parentNode.removeChild(this.$el)\n      }\n      if (this.removeLink) {\n        this.removeLink(this)\n      }\n    }\n  }\n</script>\n<style>\n  .sidebar-menu-item{\n    cursor: pointer;\n  }\n</style>\n"]}]}
{"remainingRequest":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\pages\\Dashboard\\Calendar\\Calendar.vue?vue&type=style&index=0&id=4cd3c980&lang=css&","dependencies":[{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\src\\pages\\Dashboard\\Calendar\\Calendar.vue","mtime":1670231463000},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682566248803},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682566250605},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\postcss-loader\\src\\index.js","mtime":1682566249506},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682566248145},{"path":"C:\\Users\\MHV\\Desktop\\Project Primeskills\\vue-light-bootstrap-dashboard-pro-v1.4.2\\vue-light-bootstrap-dashboard-pro-v1.4.2\\node_modules\\vue-loader\\lib\\index.js","mtime":1682566250057}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNmdWxsQ2FsZW5kYXIgewogIG1pbi1oZWlnaHQ6IDQwMHB4Owp9Ci5lbC1sb2FkaW5nLXNwaW5uZXIgLnBhdGggewogIHN0cm9rZTogIzY2NjE1YiAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":";AAuGA;AACA;AACA;AACA;AACA;AACA","file":"Calendar.vue","sourceRoot":"src/pages/Dashboard/Calendar","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card card-calendar\">\n          <div class=\"card-body\">\n            <fullCalendar ref=\"calendar\" :options=\"calendarOptions\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport swal from 'sweetalert2';\nimport FullCalendar from \"@fullcalendar/vue\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { INITIAL_EVENTS, createEventId } from \"./event-utils\";\nconst today = new Date();\nconst y = today.getFullYear();\nconst m = today.getMonth();\nconst d = today.getDate();\nexport default {\n  components: {\n    FullCalendar\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin, // needed for dateClick\n        ],\n        headerToolbar: {\n          center: \"dayGridMonth,timeGridWeek,timeGridDay\",\n          right: \"prev,next,today\",\n        },\n        initialView: \"dayGridMonth\",\n        initialEvents: INITIAL_EVENTS, // alternatively, use the `events` setting to fetch from a feed\n        editable: true,\n        selectable: true,\n        select: this.handleDateSelect,\n        eventClick: this.handleEventClick,\n        eventsSet: this.handleEvents,\n      },\n      currentEvents: [],\n    };\n  },\n  methods: {\n    handleWeekendsToggle() {\n      this.calendarOptions.weekends = !this.calendarOptions.weekends; // update a property\n    },\n    handleDateSelect(selectInfo) {\n      // on select we show the Sweet Alert modal with an input\n      const swalWithBootstrapButtons = swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-success btn-fill\",\n          cancelButton: \"btn btn-danger btn-fill\",\n        },\n        buttonsStyling: false,\n      });\n      swalWithBootstrapButtons\n        .fire({\n          title: \"Create an Event\",\n          html: `<div class=\"md-field md-theme-default\">\n          <input type=\"text\" id=\"md-input\" class=\"md-input\">\n          </div>`,\n          showCancelButton: true,\n        })\n        .then(() => {\n          var title = document.getElementById(\"md-input\").value;\n          let calendarApi = selectInfo.view.calendar;\n          calendarApi.unselect(); // clear date selection\n          if (title) {\n            calendarApi.addEvent({\n              id: createEventId(),\n              title,\n              start: selectInfo.startStr,\n              end: selectInfo.endStr,\n              allDay: selectInfo.allDay,\n            });\n          }\n        });\n    },\n    handleEventClick(clickInfo) {\n      if (\n        confirm(\n          `Are you sure you want to delete the event '${clickInfo.event.title}'`\n        )\n      ) {\n        clickInfo.event.remove();\n      }\n    },\n    handleEvents(events) {\n      this.currentEvents = events;\n    },\n  },\n};\n</script>\n<style>\n#fullCalendar {\n  min-height: 400px;\n}\n.el-loading-spinner .path {\n  stroke: #66615b !important;\n}\n</style>"]}]}
{"version":3,"file":"main.umd.js","sources":["../src/utils.ts","../src/watchers.ts","../src/core.ts"],"sourcesContent":["export const keysOf = <ObjectType>(object: ObjectType) => (\n  Object.keys(object) as Array<keyof ObjectType>\n);\n","import { watch } from 'vue';\nimport { keysOf } from '@/utils';\n\nimport type { WatchCallback } from 'vue';\n\nexport const watchReactiveObjectKeys = <ObjectType extends Record<string, unknown>>(\n  object: ObjectType,\n  callback: WatchCallback,\n) => watch(keysOf(object).map((key) => () => object[key]), callback);\n","import {\n  computed, ref, shallowRef, watch,\n} from 'vue';\nimport { watchReactiveObjectKeys } from '@/watchers';\n\nimport type { Ref } from 'vue';\nimport type { ComposableCreationOptions } from '@/types/composableCreation';\nimport type { PageRelatedRequestOptions, PaginatedRequestMethod } from '@/types/requests';\n\nexport const createPaginatedResourceComposable = <\n  PageKeyType extends string = 'page',\n  PageSizeKeyType extends string | undefined = undefined,\n>(composableOptions: ComposableCreationOptions<PageKeyType, PageSizeKeyType>) => {\n  const FRONTEND_PAGE_SIZE = composableOptions.frontend.pageSize;\n  const BACKEND_PAGE_SIZE = composableOptions.backend?.pageSize;\n  const BACKEND_PAGE_REQUEST_KEY = composableOptions.backend?.requestKeys?.page || 'page';\n  const BACKEND_PAGE_SIZE_REQUEST_KEY = composableOptions.backend?.requestKeys?.pageSize;\n\n  return <ElementType, OptionsType extends PageRelatedRequestOptions<PageKeyType, PageSizeKeyType>>(\n    paginatedRequestMethod: PaginatedRequestMethod<ElementType, OptionsType>,\n    page: Ref<number>,\n    resetPage: () => void,\n    requestOptions: Omit<\n      OptionsType,\n      keyof PageRelatedRequestOptions<PageKeyType, PageSizeKeyType>\n    >,\n  ) => {\n    const elements = shallowRef<Array<ElementType>>([]);\n    const loading = ref(false);\n    const total = ref(0);\n    const backendPage = ref(0);\n\n    const firstElement = computed(\n      () => FRONTEND_PAGE_SIZE * (page.value - 1),\n    );\n    const nextElement = computed(() => FRONTEND_PAGE_SIZE * page.value);\n    const remainingElements = computed(() => elements.value.length - nextElement.value);\n    const previousPageAvailable = computed(() => page.value > 1);\n    const nextPageAvailable = computed(() => (\n      (!loading.value || (nextElement.value < elements.value.length))\n      && (nextElement.value < total.value)\n    ));\n    const pageLimits = computed(() => ({\n      firstElement: firstElement.value,\n      lastElement: Math.min(\n        firstElement.value + FRONTEND_PAGE_SIZE - 1,\n        total.value - 1,\n      ),\n    }));\n\n    const pageElements = computed(\n      () => elements.value.slice(firstElement.value, nextElement.value),\n    );\n\n    const requestNextPage = async () => {\n      loading.value = true;\n      backendPage.value += 1;\n\n      // @ts-expect-error: The union of the page-related keys isn't perfect\n      const pageRelatedRequestOptions: PageRelatedRequestOptions<PageKeyType, PageSizeKeyType> = {\n        [BACKEND_PAGE_REQUEST_KEY as PageKeyType]: backendPage.value,\n        ...(\n          BACKEND_PAGE_SIZE_REQUEST_KEY !== undefined && {\n            [BACKEND_PAGE_SIZE_REQUEST_KEY as NonNullable<PageSizeKeyType>]: (\n              BACKEND_PAGE_SIZE as number\n            ),\n          }\n        ),\n      };\n\n      // @ts-expect-error: The union of the `requestOptions` and the page-related keys isn't perfect\n      const internalRequestOptions: OptionsType = {\n        ...pageRelatedRequestOptions,\n        ...requestOptions,\n      };\n      const {\n        total: requestTotal,\n        elements: requestElements,\n      } = await paginatedRequestMethod(internalRequestOptions);\n      total.value = requestTotal;\n      if (requestElements.length > 0) {\n        elements.value = [...elements.value, ...requestElements];\n      } else {\n        backendPage.value -= 1;\n      }\n      loading.value = false;\n    };\n\n    watchReactiveObjectKeys(requestOptions, () => {\n      elements.value = [];\n      backendPage.value = 0;\n      resetPage();\n      requestNextPage();\n    });\n\n    watch(() => page.value, () => {\n      if (\n        elements.value.length > 0\n        && (remainingElements.value < (2 * FRONTEND_PAGE_SIZE))\n        && elements.value.length < total.value\n      ) {\n        requestNextPage();\n      }\n    });\n\n    requestNextPage();\n\n    return {\n      total,\n      pageElements,\n      loading,\n      previousPageAvailable,\n      nextPageAvailable,\n      pageLimits,\n    };\n  };\n};\n"],"names":["watch","shallowRef","ref","computed"],"mappings":"ynBAAO,KAAM,GAAS,AAAa,GACjC,OAAO,KAAK,CAAM,ECIP,EAA0B,CACrC,EACA,IACGA,QAAM,EAAO,CAAM,EAAE,IAAI,AAAC,GAAQ,IAAM,EAAO,EAAI,EAAG,CAAQ,ECCtD,EAAoC,AAG/C,GAA+E,eACzE,KAAA,GAAqB,EAAkB,SAAS,SAChD,EAAoB,KAAkB,UAAlB,cAA2B,SAC/C,EAA2B,SAAkB,UAAlB,cAA2B,cAA3B,cAAwC,OAAQ,OAC3E,EAAgC,QAAkB,UAAlB,cAA2B,cAA3B,cAAwC,SAE9E,MAAO,CACL,EACA,EACA,EACA,IAIG,CACG,KAAA,GAAWC,aAA+B,CAAA,CAAE,EAC5C,EAAUC,MAAI,EAAK,EACnB,EAAQA,MAAI,CAAC,EACb,EAAcA,MAAI,CAAC,EAEnB,EAAeC,EAAAA,SACnB,IAAM,EAAsB,GAAK,MAAQ,EAC3C,EACM,EAAcA,EAAAA,SAAS,IAAM,EAAqB,EAAK,KAAK,EAC5D,EAAoBA,EAAS,SAAA,IAAM,EAAS,MAAM,OAAS,EAAY,KAAK,EAC5E,EAAwBA,EAAAA,SAAS,IAAM,EAAK,MAAQ,CAAC,EACrD,EAAoBA,EAAAA,SAAS,IAChC,EAAC,EAAQ,OAAU,EAAY,MAAQ,EAAS,MAAM,SACnD,EAAY,MAAQ,EAAM,KAC/B,EACK,EAAaA,EAAAA,SAAS,IAAO,EACjC,aAAc,EAAa,MAC3B,YAAa,KAAK,IAChB,EAAa,MAAQ,EAAqB,EAC1C,EAAM,MAAQ,CAChB,CACA,EAAA,EAEI,EAAeA,EAAAA,SACnB,IAAM,EAAS,MAAM,MAAM,EAAa,MAAO,EAAY,KAAK,CAClE,EAEM,EAAkB,SAAY,CAClC,EAAQ,MAAQ,GAChB,EAAY,OAAS,EAGrB,KAAM,GAAqF,IACxF,GAA0C,EAAY,OAErD,IAAkC,QAAa,EAC5C,GACC,CAEJ,GAKE,EAAsC,OACvC,GACA,GAEC,CACJ,MAAO,EACP,SAAU,GACR,KAAM,GAAuB,CAAsB,EACvD,EAAM,MAAQ,EACV,AAAA,EAAgB,OAAS,EAC3B,EAAS,MAAQ,CAAC,GAAG,EAAS,MAAO,GAAG,CAAe,EAEvD,EAAY,OAAS,EAEvB,EAAQ,MAAQ,EAAA,EAGlB,SAAwB,EAAgB,IAAM,CAC5C,EAAS,MAAQ,GACjB,EAAY,MAAQ,EACV,IACM,GAAA,CACjB,EAEKH,QAAA,IAAM,EAAK,MAAO,IAAM,CAC5B,AACE,EAAS,MAAM,OAAS,GACpB,EAAkB,MAAS,EAAI,GAChC,EAAS,MAAM,OAAS,EAAM,OAEjB,GAClB,CACD,EAEe,IAET,CACL,QACA,eACA,UACA,wBACA,oBACA,YAAA,CACF,CAEJ"}